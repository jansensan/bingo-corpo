{"mappings":"ICWI,EAJA,EAAA,EAAQ,EAAE,CAaZ,EAAQ,AAMV,WACE,IAAM,EAAgB,EAAE,CAEpB,EAAM,AAwCZ,WACE,IAAM,EAAS,WAAW,EAAE,CAAC,MAAM,CAAC,KAAK,GACnC,EAAY,WAAW,EAAE,CAAC,SAAS,CAAC,KAAK,GAE3C,EAAO,EAAO,KAAK,GAOvB,OANA,EAAU,OAAO,CAAC,AAAA,IACX,EAAK,QAAQ,CAAC,IACjB,EAAK,IAAI,CAAC,EAEd,GAEO,CACT,IAnDE,IAAK,IAAI,EAAI,EAAG,EA3BA,GA2Be,IAAK,CAElC,IAAM,EAAe,KAAK,KAAK,CAAC,KAAK,MAAM,GADvB,EAAI,MAAM,EAExB,EAAc,CAAG,CAAC,EAAa,CACrC,EAAc,IAAI,CAAC,GACnB,EAAI,MAAM,CAAC,EAAc,EAC3B,CAEA,OAAO,CACT,IAGE,EAAY,SAAS,cAAc,CAAC,aAnBpC,AAsBF,SAAoB,CAAK,EACvB,IAAI,EAAQ,EACZ,EAAM,OAAO,CAAC,AAAA,IAKZ,IAAM,EAAS,EAAQ,GAAM,EAEvB,EAAI,SAAS,aAAa,CAAC,SACjC,CAAA,EAAE,IAAI,CAAG,SACT,EAAE,SAAS,CAAG,EACd,EAAE,SAAS,CAAC,GAAG,CAAC,gBACZ,EACF,EAAE,SAAS,CAAC,GAAG,CAAC,QAEhB,EAAE,SAAS,CAAC,GAAG,CAAC,OAElB,EAAU,WAAW,CAAC,GAEtB,GACF,EACF,EA5Ca","sources":["<anon>","src/scripts/bingo.js"],"sourcesContent":["(() => {\n// constants\nconst $a6f33b9b331fe684$var$NUM_COLS = 5;\nconst $a6f33b9b331fe684$var$NUM_ROWS = 5;\nconst $a6f33b9b331fe684$var$NUM_CELLS = $a6f33b9b331fe684$var$NUM_COLS * $a6f33b9b331fe684$var$NUM_ROWS;\n// variables\nlet $a6f33b9b331fe684$var$terms = [];\n// dom elements\nlet $a6f33b9b331fe684$var$bingoCard;\n// auto init\n$a6f33b9b331fe684$var$initBingo();\n// methods definition\nfunction $a6f33b9b331fe684$var$initBingo() {\n    $a6f33b9b331fe684$var$terms = $a6f33b9b331fe684$var$parseData();\n    $a6f33b9b331fe684$var$getDOMElements();\n    $a6f33b9b331fe684$var$addButtons($a6f33b9b331fe684$var$terms);\n}\nfunction $a6f33b9b331fe684$var$parseData() {\n    const selectedTerms = [];\n    let urn = $a6f33b9b331fe684$var$copyData();\n    for(let i = 0; i < $a6f33b9b331fe684$var$NUM_CELLS; i++){\n        const numItemsUrn = urn.length;\n        const indexToPluck = Math.floor(Math.random() * numItemsUrn);\n        const pluckedItem = urn[indexToPluck];\n        selectedTerms.push(pluckedItem);\n        urn.splice(indexToPluck, 1);\n    }\n    return selectedTerms;\n}\nfunction $a6f33b9b331fe684$var$getDOMElements() {\n    $a6f33b9b331fe684$var$bingoCard = document.getElementById(\"bingoCard\");\n}\nfunction $a6f33b9b331fe684$var$addButtons(terms) {\n    let index = 0;\n    terms.forEach((term)=>{\n        // if (index % NUM_COLS === 0) {\n        // console.log('create new row');\n        // }\n        const isEven = index % 2 === 0;\n        const b = document.createElement(\"button\");\n        b.type = \"button\";\n        b.innerText = term;\n        b.classList.add(\"bingo-button\");\n        if (isEven) b.classList.add(\"even\");\n        else b.classList.add(\"odd\");\n        $a6f33b9b331fe684$var$bingoCard.appendChild(b);\n        index++;\n    });\n}\nfunction $a6f33b9b331fe684$var$copyData() {\n    const design = BINGO_DATA.fr.design.slice();\n    const marketing = BINGO_DATA.fr.marketing.slice();\n    let copy = design.slice();\n    marketing.forEach((element)=>{\n        if (!copy.includes(element)) copy.push(element);\n    });\n    return copy;\n}\n\n})();\n//# sourceMappingURL=bingo.js.map\n","// constants\nconst NUM_COLS = 5;\nconst NUM_ROWS = 5;\nconst NUM_CELLS = NUM_COLS * NUM_ROWS;\n\n\n// variables\nlet terms = [];\n\n\n// dom elements\nlet bingoCard;\n\n\n// auto init\ninitBingo();\n\n\n// methods definition\nfunction initBingo() {\n  terms = parseData();\n\n  getDOMElements();\n  addButtons(terms);\n}\n\nfunction parseData() {\n  const selectedTerms = []\n\n  let urn = copyData();\n  for (let i = 0; i < NUM_CELLS; i++) {\n    const numItemsUrn = urn.length;\n    const indexToPluck = Math.floor(Math.random() * numItemsUrn);\n    const pluckedItem = urn[indexToPluck];\n    selectedTerms.push(pluckedItem);\n    urn.splice(indexToPluck, 1);\n  }\n\n  return selectedTerms;\n}\n\nfunction getDOMElements() {\n  bingoCard = document.getElementById('bingoCard');\n}\n\nfunction addButtons(terms) {\n  let index = 0;\n  terms.forEach(term => {\n    // if (index % NUM_COLS === 0) {\n      // console.log('create new row');\n    // }\n\n    const isEven = index % 2 === 0;\n\n    const b = document.createElement('button');\n    b.type = 'button';\n    b.innerText = term;\n    b.classList.add('bingo-button');\n    if (isEven) {\n      b.classList.add('even');\n    } else {\n      b.classList.add('odd');\n    }\n    bingoCard.appendChild(b);\n\n    index++;\n  });\n}\n\nfunction copyData() {\n  const design = BINGO_DATA.fr.design.slice();\n  const marketing = BINGO_DATA.fr.marketing.slice();\n\n  let copy = design.slice();\n  marketing.forEach(element => {\n    if (!copy.includes(element)) {\n      copy.push(element);\n    }\n  });\n\n  return copy;\n}"],"names":["$a6f33b9b331fe684$var$bingoCard","$a6f33b9b331fe684$var$terms","$a6f33b9b331fe684$var$parseData","selectedTerms","urn","$a6f33b9b331fe684$var$copyData","design","BINGO_DATA","fr","slice","marketing","copy","forEach","element","includes","push","i","$a6f33b9b331fe684$var$NUM_COLS","indexToPluck","Math","floor","random","length","pluckedItem","splice","document","getElementById","$a6f33b9b331fe684$var$addButtons","terms","index","term","isEven","b","createElement","type","innerText","classList","add","appendChild"],"version":3,"file":"bingo.js.map"}